"""Create tables for profile service

Revision ID: c7e043fd97f9
Revises: 
Create Date: 2025-05-05 16:40:12.616328

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c7e043fd97f9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('interest',
    sa.Column('interest_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['profile_service_schema.interest.interest_id'], ),
    sa.PrimaryKeyConstraint('interest_id'),
    schema='profile_service_schema'
    )
    op.create_index(op.f('ix_profile_service_schema_interest_interest_id'), 'interest', ['interest_id'], unique=False, schema='profile_service_schema')
    op.create_index(op.f('ix_profile_service_schema_interest_name'), 'interest', ['name'], unique=False, schema='profile_service_schema')
    op.create_table('user_profile',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('reputation_score', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    schema='profile_service_schema'
    )
    op.create_index(op.f('ix_profile_service_schema_user_profile_user_id'), 'user_profile', ['user_id'], unique=False, schema='profile_service_schema')
    op.create_table('activity',
    sa.Column('activity_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['profile_service_schema.user_profile.user_id'], ),
    sa.PrimaryKeyConstraint('activity_id'),
    schema='profile_service_schema'
    )
    op.create_index(op.f('ix_profile_service_schema_activity_activity_id'), 'activity', ['activity_id'], unique=False, schema='profile_service_schema')
    op.create_table('user_interest',
    sa.Column('user_interest_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('interest_id', sa.UUID(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['interest_id'], ['profile_service_schema.interest.interest_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['profile_service_schema.user_profile.user_id'], ),
    sa.PrimaryKeyConstraint('user_interest_id'),
    schema='profile_service_schema'
    )
    op.create_index(op.f('ix_profile_service_schema_user_interest_user_interest_id'), 'user_interest', ['user_interest_id'], unique=False, schema='profile_service_schema')
    op.drop_table('alembic_version', schema='auth_service_schema')
    op.drop_index('ix_auth_service_schema_user_auth_email', table_name='user_auth', schema='auth_service_schema')
    op.drop_index('ix_auth_service_schema_user_auth_user_id', table_name='user_auth', schema='auth_service_schema')
    op.drop_index('ix_auth_service_schema_user_auth_username', table_name='user_auth', schema='auth_service_schema')
    op.drop_table('user_auth', schema='auth_service_schema')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_auth',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_blocked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_login_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='user_auth_pkey'),
    schema='auth_service_schema'
    )
    op.create_index('ix_auth_service_schema_user_auth_username', 'user_auth', ['username'], unique=False, schema='auth_service_schema')
    op.create_index('ix_auth_service_schema_user_auth_user_id', 'user_auth', ['user_id'], unique=False, schema='auth_service_schema')
    op.create_index('ix_auth_service_schema_user_auth_email', 'user_auth', ['email'], unique=True, schema='auth_service_schema')
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name='alembic_version_pkc'),
    schema='auth_service_schema'
    )
    op.drop_index(op.f('ix_profile_service_schema_user_interest_user_interest_id'), table_name='user_interest', schema='profile_service_schema')
    op.drop_table('user_interest', schema='profile_service_schema')
    op.drop_index(op.f('ix_profile_service_schema_activity_activity_id'), table_name='activity', schema='profile_service_schema')
    op.drop_table('activity', schema='profile_service_schema')
    op.drop_index(op.f('ix_profile_service_schema_user_profile_user_id'), table_name='user_profile', schema='profile_service_schema')
    op.drop_table('user_profile', schema='profile_service_schema')
    op.drop_index(op.f('ix_profile_service_schema_interest_name'), table_name='interest', schema='profile_service_schema')
    op.drop_index(op.f('ix_profile_service_schema_interest_interest_id'), table_name='interest', schema='profile_service_schema')
    op.drop_table('interest', schema='profile_service_schema')
    # ### end Alembic commands ###
